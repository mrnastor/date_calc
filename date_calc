#!/usr/bin/env node

const chalk = require('chalk');
const program = require('commander');
const _ = require('lodash');

const { validateArg, compareDates, increaseDate, countDaysBetween, getDaysInMonth } = require('./helpers.js');
const log = console.log
const printResult = (date1, date2, totalDays) => log(chalk.green(`${date1} - ${date2} : ${totalDays} day(s)`))

program
  .version('0.0.1')
  .usage("date1<Format: DD/MM/YYYY> date2<Format: DD/MM/YYYY>\ne.g. date_calc 02/06/1983 05/06/1983")
  .parse(process.argv);

if( program.args.length >= 2 ) {
  const date1 = validateArg(program.args[0])
  const date2 = validateArg(program.args[1])
  if ( date1 && date2) {
    // Quick return 0 if they are equal
    if(_.isEqual(date1, date2)) {
      printResult(program.args[0], program.args[1], 0);
      return;
    }

    let totalDays = 0;
    let fromDate = null;
    let toDate = null;
    let finalDate = null

    // Allow case when date1 is newer than date2 arg
    if(compareDates(date1, date2) > 0) {
      fromDate = _.clone(date2);
      finalDate = date1
    } else {
      fromDate = _.clone(date1);
      finalDate = date2;
    }

    do {
      let endOfMonth = _.clone(fromDate);
      endOfMonth.date = getDaysInMonth(endOfMonth.month, endOfMonth.year);

      if(compareDates(endOfMonth, finalDate) > 0) {
        toDate = finalDate
      } else {
        toDate = endOfMonth;
      }

      totalDays += countDaysBetween(fromDate, toDate);
      fromDate = increaseDate(toDate, 'day');
    } while(compareDates(finalDate, toDate) !== 0);

    printResult(program.args[0], program.args[1], totalDays - 2);
    return;
  }
  
  program.help();
} else {
  program.help();
}

